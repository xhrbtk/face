import { INativeResponse, ModuleBase } from '../native';
interface INavigatorBtn {
    title: string;
    name: string;
    icon?: string;
    disabled?: boolean;
    color?: string | number;
}
interface INavigator {
    id: string;
    page_name: string;
    type?: string;
    fullScreen?: boolean;
    data: object;
}
interface IPopupArgs {
    id: string;
    page_name: string;
    data?: object;
    width?: number;
    height?: number;
}
declare class PageModule extends ModuleBase {
    setTitle(title: string): void;
    setScreenCapture(screenCaptureBol: Boolean): Promise<INativeResponse>;
    getData(key: string): Promise<INativeResponse>;
    closeByLabel(params: {
        label: String;
        include: Boolean;
    }): void;
    setLabel(label: String): void;
    close(): void;
    setInterceptBack(alive?: boolean): void;
    /**
     * @type 'preset' | 'push'，默认'push' 从一侧打开
     */
    navigateTo(params: INavigator): void;
    navigateForward(params: INavigator, cb?: (result: any) => void): void;
    setResult(data: object): void;
    openLink(params: {
        url: string;
        openWithWebview?: boolean;
    }): void;
    popup(params: IPopupArgs): void;
    ready(): void;
    captureToSendChatMsg(): void;
    navBtn(buttons: INavigatorBtn[]): Promise<INativeResponse>;
    miniProgramShare(): void;
}
export declare const Page: PageModule;
export {};
