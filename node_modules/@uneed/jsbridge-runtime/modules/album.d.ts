import { INativeResponse, ModuleBase } from '../native';
interface addPhotoJson {
    action: string;
    albumid: string;
    public: boolean;
}
interface saveFileJson {
    contids: Array<string>;
    action: string;
    albumid: string;
}
interface File {
    file_name: string;
    content_type: string;
    full_url: string;
    thumb_url: string;
    preview_url: string;
    origin_url: string;
    file_size: number;
    width: number;
    height: number;
    duration: number;
    labels: any;
    rotate: any;
}
interface shareOthersJson {
    files: Array<File>;
    albumid: string;
}
declare class AlbumModule extends ModuleBase {
    addPhoto(json: addPhotoJson): Promise<INativeResponse>;
    addShareMem(albumid: string, isCreator: boolean, key: string): Promise<INativeResponse>;
    saveFromAlbum(json: saveFileJson): Promise<INativeResponse>;
    shareToSystem(json: shareOthersJson): Promise<INativeResponse>;
    playAudio(json: shareOthersJson): Promise<INativeResponse>;
    openProfile(params: {
        uid: String;
        albumid: String;
    }): Promise<INativeResponse>;
    refreshAlbum(albumid: string): Promise<INativeResponse>;
    preview(params: shareOthersJson): Promise<INativeResponse>;
    recording(params: {
        contid: String;
    }): Promise<INativeResponse>;
    playRecord(params: {
        url: String;
        duration: Number;
        isPlay: Boolean;
    }): Promise<INativeResponse>;
    geTIsSetPassword(): Promise<INativeResponse>;
    goToSetPassword(): Promise<INativeResponse>;
    shareWithOthers(json: shareOthersJson): Promise<INativeResponse>;
    cloudIsFull(): Promise<INativeResponse>;
}
export declare const Album: AlbumModule;
export {};
