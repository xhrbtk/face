import { INativeResponse, ModuleBase } from '../native';
interface webImagesParam {
    list: Array<object>;
    index: number;
}
interface imagesParam {
    imgs: Array<any>;
    index: number;
    can_select?: boolean;
}
interface albumImageParam {
    cvsid: string;
    cvsType: string;
    contentids: string[];
    index?: number;
}
declare class ImageModule extends ModuleBase {
    saveBase64ToFile(base64: string): Promise<INativeResponse>;
    saveToSystemAlbum(filePath: string, url?: string): Promise<INativeResponse>;
    openSystemCamera(params: {
        front: boolean;
    }): Promise<INativeResponse>;
    pickSystemImage(params: {
        multiple: boolean;
        type?: string;
        max?: number;
    }): Promise<INativeResponse>;
    previewImage(params: imagesParam | any): Promise<INativeResponse>;
    previewWebImages(params: webImagesParam | any): void;
    previewAlbumImage(params: albumImageParam | any): Promise<INativeResponse>;
}
export declare const Image: ImageModule;
export {};
