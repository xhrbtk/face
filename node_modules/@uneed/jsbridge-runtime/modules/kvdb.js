"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.KVDB = void 0;
var native_1 = require("../native");
var KVDBModule = /** @class */ (function (_super) {
    __extends(KVDBModule, _super);
    function KVDBModule() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    KVDBModule.prototype.get = function (key, webId, customTime) {
        return this.native.callNativeFlat('KVDB', 'get', { key: key, webId: webId, customTime: customTime });
    };
    KVDBModule.prototype.remove = function (key, webId) {
        return this.native.callNativeFlat('KVDB', 'remove', { key: key, webId: webId });
    };
    KVDBModule.prototype.set = function (key, val, webId) {
        return this.native.callNativeFlat('KVDB', 'set', { key: key, val: val, webId: webId });
    };
    KVDBModule.prototype.batchGet = function (path, webId, customTime) {
        var param = webId ? {
            key: [],
            webId: webId,
            customTime: customTime
        } : {
            key: [],
            customTime: customTime
        };
        if (!Array.isArray(path)) {
            param.key = [path];
        }
        else {
            param.key = path;
        }
        return this.native.callNativeFlat('KVDB', 'batchGet', param);
    };
    return KVDBModule;
}(native_1.ModuleBase));
exports.KVDB = new KVDBModule();
native_1.addJSModule('KVDB', exports.KVDB);
