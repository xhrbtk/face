"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.UDisk = void 0;
var native_1 = require("../native");
var UdiskModule = /** @class */ (function (_super) {
    __extends(UdiskModule, _super);
    function UdiskModule() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // 当前连接wifi信息
    UdiskModule.prototype.getWifiInfo = function () {
        return this.native.callNative({
            module: 'UDisk',
            method: 'getWifiInfo',
            args: {},
        });
    };
    UdiskModule.prototype.disconnect = function (params) {
        return this.native.callNative({
            module: 'UDisk',
            method: 'disconnect',
            args: params || {},
        });
    };
    // ip port 协议 devices
    UdiskModule.prototype.getServerInfo = function (params) {
        if (!params) {
            params = {
                root: 'udisk',
            };
        }
        else if (typeof params == 'string') {
            params = { root: params };
        }
        return this.native.callNative({
            module: 'UDisk',
            method: 'getServerInfo',
            args: params,
        });
    };
    // token 身份认证
    UdiskModule.prototype.genToken = function (params) {
        return this.native.callNative({
            module: 'UDisk',
            method: 'genToken',
            args: params,
        });
    };
    // list 获取文件列表
    UdiskModule.prototype.list = function (params) {
        if (!params.root) {
            params.root = 'udisk';
        }
        return this.native.callNative({
            module: 'UDisk',
            method: 'list',
            args: params,
        });
    };
    // info 获取存储空间信息
    UdiskModule.prototype.info = function (params) {
        if (!params) {
            params = {
                root: 'udisk',
            };
        }
        else if (typeof params == 'string') {
            params = { root: params };
        }
        return this.native.callNative({
            module: 'UDisk',
            method: 'info',
            args: params,
        });
    };
    // fileinfo 获取指定文件信息
    UdiskModule.prototype.fileinfo = function (params) {
        if (!params.root) {
            params.root = 'udisk';
        }
        return this.native.callNative({
            module: 'UDisk',
            method: 'fileinfo',
            args: params,
        });
    };
    UdiskModule.prototype.fileContent = function (params) {
        if (!params.root) {
            params.root = 'udisk';
        }
        return this.native.callNative({
            module: 'UDisk',
            method: 'fileContent',
            args: params,
        });
    };
    UdiskModule.prototype.preview = function (params) {
        if (!params.root) {
            params.root = 'udisk';
        }
        return this.native.callNative({
            module: 'UDisk',
            method: 'preview',
            args: params,
        });
    };
    UdiskModule.prototype.getAbsolutePath = function (params) {
        if (!params.root) {
            params.root = 'udisk';
        }
        return this.native.callNative({
            module: 'UDisk',
            method: 'getAbsolutePath',
            args: params,
        });
    };
    // 创建
    UdiskModule.prototype.mkdir = function (params) {
        if (!params.root) {
            params.root = 'udisk';
        }
        return this.native.callNative({
            module: 'UDisk',
            method: 'mkdir',
            args: params,
        });
    };
    // 删除
    UdiskModule.prototype.delete = function (params) {
        if (!params.root) {
            params.root = 'udisk';
        }
        return this.native.callNative({
            module: 'UDisk',
            method: 'delete',
            args: params,
        });
    };
    // 重命名
    UdiskModule.prototype.rename = function (params) {
        if (!params.root) {
            params.root = 'udisk';
        }
        return this.native.callNative({
            module: 'UDisk',
            method: 'rename',
            args: params,
        });
    };
    UdiskModule.prototype.move = function (params) {
        if (!params.root) {
            params.root = 'udisk';
        }
        return this.native.callNative({
            module: 'UDisk',
            method: 'move',
            args: params,
        });
    };
    UdiskModule.prototype.copy = function (params) {
        if (!params.root) {
            params.root = 'udisk';
        }
        return this.native.callNative({
            module: 'UDisk',
            method: 'copy',
            args: params,
        });
    };
    UdiskModule.prototype.importFromPhotos = function (params) {
        if (!params.root) {
            params.root = 'udisk';
        }
        return this.native.callNative({
            module: 'UDisk',
            method: 'importFromPhotos',
            args: params,
        });
    };
    UdiskModule.prototype.importFromSystem = function (params) {
        if (!params.root) {
            params.root = 'udisk';
        }
        return this.native.callNative({
            module: 'UDisk',
            method: 'importFromSystem',
            args: params,
        });
    };
    UdiskModule.prototype.exportToSystem = function (params) {
        if (!params.root) {
            params.root = 'udisk';
        }
        return this.native.callNative({
            module: 'UDisk',
            method: 'exportToSystem',
            args: params,
        });
    };
    UdiskModule.prototype.uploadToAlbum = function (params) {
        if (!params.root) {
            params.root = 'udisk';
        }
        return this.native.callNative({
            module: 'UDisk',
            method: 'uploadToAlbum',
            args: params,
        });
    };
    UdiskModule.prototype.uploadToCloud = function (params) {
        // 上传到云盘
        if (!params.root) {
            params.root = 'udisk';
        }
        return this.native.callNative({
            module: 'UDisk',
            method: 'uploadToCloud',
            args: params,
        });
    };
    UdiskModule.prototype.playFile = function (params) {
        return this.native.callNative({
            module: 'UDisk',
            method: 'playFile',
            args: params,
        });
    };
    return UdiskModule;
}(native_1.ModuleBase));
exports.UDisk = new UdiskModule();
native_1.addJSModule('UDisk', exports.UDisk);
