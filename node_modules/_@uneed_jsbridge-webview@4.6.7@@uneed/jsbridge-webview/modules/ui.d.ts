import { INativeResponse, ModuleBase } from '../native';
interface IToastParams {
    message: string;
    x?: number;
    y?: number;
}
interface IAlertParams {
    message?: string;
    button?: string;
    title?: string;
}
interface IAlertWithImageParams {
    title?: string;
    url?: string;
    text?: string;
    left?: string;
    right?: string;
}
interface IAlertCheckBoxParams {
    title?: string;
    desc?: string;
}
interface IConfirmParams {
    message?: string;
    left?: string;
    right?: string;
    title?: string;
}
interface IActionSheetParams {
    text: string;
    action: string;
}
interface InputParams {
    maxLength?: number;
    content?: string;
}
interface SelectDateParams {
    mode: number;
    type: number;
    minimumDate?: number;
    maximumDate?: number;
    defaultDate?: number;
    title?: string;
}
interface IPromptParams {
    title: string;
    content?: string;
    lines?: number;
    maxLength?: number;
    cursor?: number;
    cancel?: string;
    ok?: string;
    selected?: boolean;
}
declare class UIModule extends ModuleBase {
    actionSheet(items: IActionSheetParams[]): Promise<INativeResponse>;
    toast(params: IToastParams | string): Promise<INativeResponse>;
    alertWithImg(params: IAlertWithImageParams): Promise<INativeResponse>;
    alertWithCheckBox(params: IAlertCheckBoxParams): Promise<INativeResponse>;
    alert(message: string | IAlertParams): Promise<INativeResponse>;
    confirm(message: string | IConfirmParams): Promise<INativeResponse>;
    selectDate(params: SelectDateParams | any): Promise<INativeResponse>;
    input(params: number | InputParams): Promise<INativeResponse>;
    prompt(params: IPromptParams | any): Promise<INativeResponse>;
    showLoading(title?: string): void;
    hideLoading(): void;
}
export declare const UI: UIModule;
export {};
