"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.File = void 0;
var native_1 = require("../native");
var FileModule = /** @class */ (function (_super) {
    __extends(FileModule, _super);
    function FileModule() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FileModule.prototype.read = function (path, webId) {
        return this.native.callNativeFlat('File', 'read', { path: path, webId: webId });
    };
    FileModule.prototype.write = function (data) {
        return this.native.callNativeFlat('File', 'write', data);
    };
    FileModule.prototype.remove = function (path) {
        return this.native.callNativeFlat('File', 'remove', { path: path });
    };
    FileModule.prototype.zip = function (data) {
        return this.native.callNativeFlat('File', 'zip', data);
    };
    FileModule.prototype.download = function (data) {
        return this.native.callNativeFlat('File', 'download', data);
    };
    return FileModule;
}(native_1.ModuleBase));
exports.File = new FileModule();
native_1.addJSModule('File', exports.File);
