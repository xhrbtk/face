"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Nas = void 0;
var native_1 = require("../native");
var NasModule = /** @class */ (function (_super) {
    __extends(NasModule, _super);
    function NasModule() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NasModule.prototype.uploadToNas = function (params) {
        return this.native.callNative({
            module: 'Nas',
            method: 'uploadToNas',
            args: params,
        });
    };
    NasModule.prototype.saveFromNas = function (params) {
        if (!params.from) {
            params.from = '0';
        }
        return this.native.callNative({
            module: 'Nas',
            method: 'saveFromNas',
            args: params,
        });
    };
    NasModule.prototype.fileContent = function (params) {
        return this.native.callNative({
            module: 'Nas',
            method: 'fileContent',
            args: params,
        });
    };
    NasModule.prototype.preview = function (params) {
        // from 来源 来自云盘 '0' 来自云盘分享'1'
        if (!params.from) {
            params.from = '0';
        }
        return this.native.callNative({
            module: 'Nas',
            method: 'preview',
            args: params,
        });
    };
    NasModule.prototype.playFile = function (params) {
        return this.native.callNative({
            module: 'Nas',
            method: 'playFile',
            args: params,
        });
    };
    return NasModule;
}(native_1.ModuleBase));
exports.Nas = new NasModule();
native_1.addJSModule('Nas', exports.Nas);
