"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.UI = void 0;
var native_1 = require("../native");
var UIModule = /** @class */ (function (_super) {
    __extends(UIModule, _super);
    function UIModule() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UIModule.prototype.actionSheet = function (items) {
        return this.native.callNativeFlat('UI', 'actionSheet', { items: items });
    };
    UIModule.prototype.toast = function (params) {
        if (typeof params === 'string') {
            params = { message: params };
        }
        return this.native.callNativeFlat('UI', 'toast', params);
    };
    // 弹框带img
    UIModule.prototype.alertWithImg = function (params) {
        return this.native.callNativeFlat('UI', 'alertWithImg', params);
    };
    // 弹框带checkbox
    UIModule.prototype.alertWithCheckBox = function (params) {
        return this.native.callNativeFlat('UI', 'alertWithCheckBox', params);
    };
    UIModule.prototype.alert = function (message) {
        if (typeof message === 'string') {
            return this.native.callNativeFlat('UI', 'alert', { message: message });
        }
        else {
            return this.native.callNativeFlat('UI', 'alert', message);
        }
    };
    UIModule.prototype.confirm = function (message) {
        if (typeof message === 'string') {
            return this.native.callNativeFlat('UI', 'confirm', { message: message });
        }
        else {
            return this.native.callNativeFlat('UI', 'confirm', message);
        }
    };
    UIModule.prototype.selectDate = function (params) {
        return this.native.callNativeFlat('UI', 'selectDate', params);
    };
    UIModule.prototype.input = function (params) {
        if (typeof params === 'number') {
            params = {
                maxLength: params,
            };
        }
        else if (!params) {
            params = {
                maxLength: 16,
            };
        }
        return this.native.callNativeFlat('UI', 'input', params);
    };
    UIModule.prototype.prompt = function (params) {
        if (!params.content) {
            params.content = '';
        }
        if (!params.lines) {
            params.lines = 1;
        }
        if (!params.maxLength) {
            params.maxLength = 300;
        }
        if (!params.selected) {
            params.selected = true;
        }
        return this.native.callNativeFlat('UI', 'prompt', params);
    };
    UIModule.prototype.showLoading = function (title) {
        this.native.callNativeFlat('UI', 'showLoading', { title: title });
    };
    UIModule.prototype.hideLoading = function () {
        this.native.callNativeFlat('UI', 'hideLoading');
    };
    return UIModule;
}(native_1.ModuleBase));
exports.UI = new UIModule();
native_1.addJSModule('UI', exports.UI);
