"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Sticker = void 0;
var native_1 = require("../native");
var downStatus;
(function (downStatus) {
    downStatus[downStatus["NotStart"] = 0] = "NotStart";
    downStatus[downStatus["Downloading"] = 1] = "Downloading";
    downStatus[downStatus["Complete"] = 2] = "Complete";
    downStatus[downStatus["Cancel"] = 3] = "Cancel";
    downStatus[downStatus["Error"] = 4] = "Error";
    downStatus[downStatus["Pause"] = 5] = "Pause";
})(downStatus || (downStatus = {}));
var StickerModule = /** @class */ (function (_super) {
    __extends(StickerModule, _super);
    function StickerModule() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // 返回 downStatus
    StickerModule.prototype.checkState = function (packid) {
        return this.native.callNative({
            module: 'Sticker',
            method: 'checkState',
            args: {
                packid: packid,
            },
        });
    };
    StickerModule.prototype.download = function (packid) {
        return this.native.callNative({
            module: 'Sticker',
            method: 'download',
            args: {
                packid: packid,
            },
        });
    };
    // 表情包内容更新通知客户端
    StickerModule.prototype.updateSticker = function (data) {
        return this.native.callNative({
            module: 'Sticker',
            method: 'updateSticker',
            args: data,
        });
    };
    // 添加表情包
    StickerModule.prototype.addSticker = function (data) {
        return this.native.callNative({
            module: 'Sticker',
            method: 'addSticker',
            args: data,
        });
    };
    // 获取表情下载状态与进度
    StickerModule.prototype.downLoadStatus = function (packid) {
        return this.native.callNative({
            module: 'Sticker',
            method: 'downLoadStatus',
            args: {
                packid: packid,
            },
        });
    };
    StickerModule.prototype.addFavourite = function (data) {
        return this.native.callNative({
            module: 'Sticker',
            method: 'addFavourite',
            args: data,
        });
    };
    StickerModule.prototype.favoriteList = function () {
        return this.native.callNative({
            module: 'Sticker',
            method: 'favoriteList',
            args: {},
        });
    };
    StickerModule.prototype.refreshFavorite = function () {
        return this.native.callNative({
            module: 'Sticker',
            method: 'refreshFavorite',
            args: {},
        });
    };
    return StickerModule;
}(native_1.ModuleBase));
exports.Sticker = new StickerModule();
native_1.addJSModule('Sticker', exports.Sticker);
