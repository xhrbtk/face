"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Chatlet = void 0;
var native_1 = require("../native");
var ChatletModule = /** @class */ (function (_super) {
    __extends(ChatletModule, _super);
    function ChatletModule() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ChatletModule.prototype.button = function (params) {
        return this.native.callNative({
            module: 'Chatlet',
            method: 'button',
            args: params,
        });
    };
    ChatletModule.prototype.mapMarkUser = function (params) {
        return this.native.callNative({
            module: 'Chatlet',
            method: 'mapMarkUser',
            args: params,
        });
    };
    ChatletModule.prototype.mapMarkDest = function (params) {
        return this.native.callNative({
            module: 'Chatlet',
            method: 'mapMarkDest',
            args: params,
        });
    };
    // open: boolean
    ChatletModule.prototype.sharePoiSwitch = function (params) {
        return this.native.callNative({
            module: 'Chatlet',
            method: 'sharePoiSwitch',
            args: params,
        });
    };
    ChatletModule.prototype.getCloudFile = function (params) {
        return this.native.callNative({
            module: 'Chatlet',
            method: 'getCloudFile',
            args: params,
        });
    };
    ChatletModule.prototype.setChatletViewHeight = function (height) {
        return this.native.callNative({
            module: 'Chatlet',
            method: 'setChatletViewHeight',
            args: height,
        });
    };
    ChatletModule.prototype.setChatletViewFitHeight = function (height) {
        return this.native.callNative({
            module: 'Chatlet',
            method: 'setChatletViewFitHeight',
            args: height,
        });
    };
    ChatletModule.prototype.setChatletViewMinHeight = function (height) {
        return this.native.callNative({
            module: 'Chatlet',
            method: 'setChatletViewMinHeight',
            args: height,
        });
    };
    ChatletModule.prototype.setChatletViewMaxHeight = function (height) {
        this.native.callNative({
            module: 'Chatlet',
            method: 'setChatletViewMaxHeight',
            args: height,
        });
    };
    ChatletModule.prototype.activeChatletController = function () {
        this.native.callNative({
            module: 'Chatlet',
            method: 'activeChatletController',
            args: {},
        });
    };
    ChatletModule.prototype.getChatletViewThumbed = function () {
        return this.native.callNative({
            module: 'Chatlet',
            method: 'getChatletViewThumbed',
            args: {},
        });
    };
    ChatletModule.prototype.setFullScreen = function (params) {
        this.native.callNative({
            module: 'Chatlet',
            method: 'setFullScreen',
            args: params,
        });
    };
    ChatletModule.prototype.updateCvsDetailItem = function (params) {
        return this.native.callNative({
            module: 'Chatlet',
            method: 'updateCvsDetailItem',
            args: params,
        });
    };
    ChatletModule.prototype.getSettings = function (params) {
        return this.native.callNative({
            module: 'Chatlet',
            method: 'getSettings',
            args: params,
        });
    };
    ChatletModule.prototype.postEvent = function (params) {
        this.native.callNative({
            module: 'Chatlet',
            method: 'postEvent',
            args: params,
        });
    };
    ChatletModule.prototype.showPage = function () {
        this.native.callNative({
            module: 'Chatlet',
            method: 'showPage',
            args: {},
        });
    };
    ChatletModule.prototype.hidePage = function () {
        this.native.callNative({
            module: 'Chatlet',
            method: 'hidePage',
            args: {},
        });
    };
    ChatletModule.prototype.getSystemVolumeOrBrightness = function (params) {
        return this.native.callNative({
            module: 'Chatlet',
            method: 'getSystemVolumeOrBrightness',
            args: params,
        });
    };
    ChatletModule.prototype.setSystemVolumeOrBrightness = function (params) {
        return this.native.callNative({
            module: 'Chatlet',
            method: 'setSystemVolumeOrBrightness',
            args: params,
        });
    };
    ChatletModule.prototype.uploadFileToChatlet = function (params) {
        return this.native.callNative({
            module: 'Chatlet',
            method: 'uploadFileToChatlet',
            args: params,
        });
    };
    ChatletModule.prototype.startChatLiveCallback = function (params) {
        return this.native.callNative({
            module: 'Chatlet',
            method: 'startChatLiveCallback',
            args: params,
        });
    };
    ChatletModule.prototype.getChatLiveUploadInfo = function (params) {
        return this.native.callNative({
            module: 'Chatlet',
            method: 'getChatLiveUploadInfo',
            args: params,
        });
    };
    return ChatletModule;
}(native_1.ModuleBase));
exports.Chatlet = new ChatletModule();
native_1.addJSModule('Chatlet', exports.Chatlet);
